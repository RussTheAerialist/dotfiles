export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:$HOME/bin:$HOME/.cargo/bin:$PATH"

alias vim=`where nvim`
alias vi=`where nvim`

if [ -f /opt/local/share/fzf/shell/key-bindings.zsh ]; then
  source  /opt/local/share/fzf/shell/key-bindings.zsh
fi

EXA_PATH=`which exa`
if [ -f "$EXA_PATH" ]; then
  alias ls="$EXA_PATH"
  alias lg="$EXA_PATH --git -albgH -s modified"
  alias lt="$EXA_PATH -T"
else
  alias lss='ls -lSrh'
  alias lg="ls -Flag"
  alias lt="ls"
fi

mot() {
  if [ "$1" != "" ]; then
    mosh "$1" -- tmux new -Ad -s mosh-session
  else
    mosh "rhay@russellhay.com" -- tmux new -Ad -s mosh-session
  fi
}

export EDITOR='nvim'

# Compilation flags
export ARCHFLAGS="-arch x86_64"
export GOROOT="/usr/local/go"
export GOPATH="$HOME/code/go"
export GOPATH="/Users/rhay/code/firmata-arduino/test/neopixel_test/go/"

export P4CONFIG=.p4config

epsync() { aws s3 sync --acl public-read $@ $HOME/poorimpulse_audio s3://episodes.poorimpulse.co }
function pie() {
  mp3info -p "%f %m:%s " $1
  ls -l $1 | cut -d\  -f8
}

function mdhdr () { grep -e '^#' $1 }
function mdcnthdr () { mdhdr $1 | sort | uniq -c }
function wcc () {
  mkdir -p /tmp/chp 2> /dev/null
  FILE=$(pwd)/$1
  (cd /tmp/chp && csplit -k $FILE '/^#/' {99}) 2> /dev/null
  for n in $(ls /tmp/chp)
  do
    CHAPTER=$(grep -e '^#' /tmp/chp/$n)
    LINE_COUNT=$(wc -w /tmp/chp/$n | cut -d/ -f1)
    echo $CHAPTER $LINE_COUNT
  done
  rm -rf /tmp/chp
}

function vict() {
  vi $1 && cargo 'test'
}

if which rbenv > /dev/null; then
  eval "$(rbenv init -)"
fi

export RUST_SRC_PATH=$HOME/.rustc/rustc/src

if [ $(uname) = "Darwin" ]; then
  export PATH="/opt/X11/bin:$HOME/Library/Python/2.7/bin:/opt/local/bin:/opt/local/sbin:$PATH"
  export MANPATH=/opt/local/share/man:$MANPATH
  source $HOME/.iterm2_shell_integration.zsh
fi

# added by travis gem
[ -f /home/rhay/.travis/travis.sh ] && source /home/rhay/.travis/travis.sh

[ -f /usr/bin/direnv ] && eval "$(direnv hook zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

[ -f ~/.zshrc.local ] && source ~/.zshrc.local

eval "$(starship init zsh)"

